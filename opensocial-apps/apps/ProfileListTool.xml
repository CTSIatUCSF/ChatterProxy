<?xml version="1.0" encoding="UTF-8"?>
<Module>
	<ModulePrefs title="Profile List Tool">
		<Require feature="opensocial-0.9" />
		<Require feature="views" />
		<Require feature="dynamic-height" />
		<Require feature="pubsub" />
		<Require feature="osapi" />
	</ModulePrefs>

	<!-- ==================== START COMBINED VIEWS ==================== -->

	<Content type="html" view="canvas, small"><![CDATA[<!--HTML-->
    <!DOCTYPE html>
    
	<!-- #includes -->
	<link rel="stylesheet" href="css/gadget.css" type="text/css" media="screen, projection" >
    <script type="text/javascript" src="js/os.js" ></script>
	
	<style>
    	.tool_title {font-family:Verdana,Arial; font-size:14px;}
    	.tool_title_orange {font-family:Verdana,Arial; font-size:14px; color:#FF9900;}
    	.tool_body {font-family:Arial; font-size:12px;}
    	.tool_credit {font-family:Arial; font-size:10px;}
    	.tool_table_cell {font-family:Arial; font-size:12px; padding:0 20px 0 0;}
    	.tool_table_cell_small {font-family:Arial; font-size:11px;}
    	.tool_toggle_button {height:18px; font-size:9px; font-weight:bold;}  		   	
    </style>

	<script type="text/javascript">
	
	var g_arrPubSubIDs = [];
	var g_arrOldIDs = [];

	// ==============================================================
	
	function showHelp() {
	
		var pop = window.open('Profile List Tool Help','','top=200,left=200,width=450,height=275,scrollbars=0,status=0,menubar=0,location=0,resizable=0');
		pop.document.write("<html><head></head><body><div style='margin:10px; font-family:Arial; font-size:12px;'>");  
		pop.document.write("The Profile List Tool lets you put together a list of profiles "
			+ "then export data from the list. To build the list, you can add one profile at a time, "
			+ "add a set of search results, or add a set of co-authors. You can then export "
			+ "certain data from the chosen profiles such as email addresses, names and departments."
			+ "<ul><li>Click the On/Off toggle to turn the Profile List Tool on or off.</li>"
			+ "<li>Find the profiles you want to add to your list.</li>"
			+ "<li>Click the Add link to add the currently-displayed profile(s) to your list. Only profiles that have not already been added will be counted and eligible for adding.</li>"
			+ "<li>Click the View link to see your list.</li></ul>"
			+ "From the List View you can export data from the profiles or delete the list to start over.");
		pop.document.write("<br><br><center>" 
			+ "<input type = 'button' value = 'Close' onclick = 'window.close();'>" 
			+ "</center>");
		pop.document.write("</body></html>");
	}
	// ==============================================================
	
	function toggleToolState(obj) {
		
		var state = (obj.value == "On") ? "Off" : "On";
		document.getElementById(obj.id).value = state;
		osapi.appdata.update({'userId': '@viewer', 'appId':'@app', 'data': {'on_off': state} }).execute(function(result) {
			if (result.error) { 
				alert("Error " + result.error.code + " updating application data: " + result.error.message);
			} else {
				document.getElementById("actions").style.display="none";
				showToolState();
			}
		});
	}
	// ==============================================================
	
	function showToolState() {
	
		// fetch the on/off state
		osapi.appdata.get({'userId':'@viewer', 'appId':'@app', 'fields':['on_off']} )
			.execute(function(result){
				
			// extract and update state
			var state = os.osapi.getViewerFromResult(result).on_off;
			document.getElementById("state_button").value = state;

			// update ui and pubsub
			if (state == "On") {
				// display the action item table and update it
				document.getElementById("actions").style.display="block";
				document.getElementById("add_profiles").innerHTML = "Searching for new profiles...";
				document.getElementById("list_profiles").innerHTML = "Loading profiles...";
				readData(function(){gadgets.pubsub.subscribe("JSONPersonIds", readPubSubIDsAndUpdateActions)});
				gadgets.window.adjustHeight(75);
			} 
			else {
				document.getElementById("actions").style.display="none";
				gadgets.window.adjustHeight(30);	
			}
				
		}); /* end osapi.appdata.get */	
	}

	// ==============================================================		
	
	function addProfilesToList() {
						
		// merge the incoming and existing person ID arrays
		// existing array already populated
		var arrMergedIDs = g_arrOldIDs.concat(g_arrPubSubIDs);

		// dedupe the merged person ID array and save it
		var arrUnChunked = dedupeArray(arrMergedIDs);		

		saveData(arrUnChunked, function() {
			document.getElementById("add_profiles").innerHTML = (arrMergedIDs.length - g_arrOldIDs.length) + " Profile(s) added";
			document.getElementById("list_profiles").innerHTML = "<a style='font-size:11px;' href='javascript:gadgets.views.requestNavigateTo(\"canvas\");'>View list (" + arrMergedIDs.length + " Profiles)</a>";
		});
	}
	// ==============================================================
	
	// first argument is an array of data, 
    // second argument is the callback function to execute after updating the data
     
    function saveData(arrUnChunked, callback) {                  
	    // chunk up the copy into 400-element batches
	    var chunkedDataObject = {}; // a map of data, keyed by pIds + chunk num
	    
	    var chunkNum = 0;
	    while(arrUnChunked.length) {
	        var chunkName = 'pIDs' + chunkNum++;
	        chunkedDataObject[chunkName] = gadgets.json.stringify(arrUnChunked.splice(0, 400)); // chunked data as string as required by osapi.udpate call
	    }
	    chunkedDataObject["num_chunks"] = "" + chunkNum; // number of chunks as string as required by osapi.udpate call
	    
	    // at this point we should have a nice chunkedDataObject that we can convert to JSON and store as
	    // appdata in one call		
		
	    osapi.appdata.update({'userId': '@viewer', 'appId':'@app', 'data': gadgets.json.stringify(chunkedDataObject)}).execute(callback);
    }
	// ==============================================================
	
    function deleteList() {

		// get the number of chunks
		osapi.appdata.get({'userId':'@viewer', 'appId':'@app', 'fields':['num_chunks']} )
			.execute(function(result){
				
			var viewer = os.osapi.getViewerFromResult(result);

			var num_chunks = viewer.num_chunks;	
				
			// build the fields to read the chunks
			var fields = [];
			for (var i = 0; i < num_chunks; i++) {
				fields[i] = 'pIDs' + i;
			}
			// also delete the num_chunks field
			fields[num_chunks] = 'num_chunks';
			
			// for some reason osapi.appdata.delete kills IE so we are using this older method
			// for now
			var req = opensocial.newDataRequest();
			req.add(req.newRemovePersonAppDataRequest(fields));
			req.send(function(result) {
				if (result.error) { 
					alert("Error " + result.error.code + " deleting application data: " + result.error.message);
				} else {
					document.getElementById("canvas_email_list_textarea").value = "";
					document.getElementById("canvas_full_list_textarea").value = "";
					document.getElementById("canvas_profile_list").innerHTML = "";
					document.getElementById("number_selected").innerHTML = "Select Profiles";
				}				
			});
			
			//osapi.appdata.delete({'userId':'@viewer', 'appId':'@app', 'fields': fields} )
			//	.execute(function(result){
			//	if (result.error) { 
			//		alert("Error " + result.error.code + " deleting application data: " + result.error.message);
			//	} else {
			//		document.getElementById("canvas_email_list_textarea").value = "";
			//		document.getElementById("canvas_full_list_textarea").value = "";
			//		document.getElementById("canvas_profile_list").innerHTML = "";
			//		document.getElementById("number_selected").innerHTML = "Select Profiles";
			//	alert("List deleted");
			//	}				
			//}); /* end osapi.appdata.delete */
			
		}); /* end osapi.appdata.get */
		
    }    
	// ==============================================================	
	
	function dedupeArray(arrHasDupes) {
	
		var arrDeDuped = [];
		label:for(var i = 0; i < arrHasDupes.length;i++ ) {  
			for(var j = 0; j < arrDeDuped.length;j++ ) {
				if (arrDeDuped[j] == arrHasDupes[i]) 
				continue label;
			}
			arrDeDuped[arrDeDuped.length] = arrHasDupes[i];
		}
        return arrDeDuped;
	}
	// ==============================================================	

	
	function readPubSubIDsAndUpdateActions(sender, message) {						
		// extract the array of incoming person IDs
		g_arrPubSubIDs =  gadgets.json.parse(message).personIds;

		// merge the incoming and existing person ID arrays to throw out dupes for count purposes only
		var arrMergedIDs = g_arrOldIDs.concat(g_arrPubSubIDs );
		arrMergedIDs = dedupeArray(arrMergedIDs);	
		var newIDsCount = arrMergedIDs.length - g_arrOldIDs.length; 		
			
		if (newIDsCount > 0) {
			// we have new ID
			document.getElementById("add_profiles").innerHTML = "<a style='font-size:11px;' href='javascript:addProfilesToList();'>Add " + newIDsCount + " new Profile(s)</a>";				
		} else {
			document.getElementById("add_profiles").innerHTML = "0 new Profile(s)";
		}
			
		if (g_arrOldIDs.length > 0) { 
			document.getElementById("list_profiles").innerHTML = "<a style='font-size:11px;' href='javascript:gadgets.views.requestNavigateTo(\"canvas\");'>View list (" + g_arrOldIDs.length + ") Profile(s)</a>";
		} else {
			document.getElementById("list_profiles").innerHTML = "View list (0) Profile(s)";
		}
	}
	// ==============================================================
	
    function readData(callback) {

		// get the number of chunks
		osapi.appdata.get({'userId':'@viewer', 'appId':'@app', 'fields':['num_chunks']} )
			.execute(function(result){
				
			var viewer = os.osapi.getViewerFromResult(result);

			var num_chunks = viewer.num_chunks;	
				
			// build the fields to read the chunks
			var fields = [];
			for (var i = 0; i < num_chunks; i++) {
				fields[i] = 'pIDs' + i;
			}
			osapi.appdata.get({'userId':'@viewer', 'appId':'@app', 'fields': fields} )
				.execute(function(result){
				
				g_arrOldIDs = [];
				var viewer = os.osapi.getViewerFromResult(result);
				for (var i = 0; i < fields.length; i++) {
					var chunk = gadgets.json.parse(viewer[fields[i]]);
					g_arrOldIDs = g_arrOldIDs.concat(chunk);
				}
				// now that all the data is loaded, execute the callback
				callback();	
			}); /* end osapi.appdata.get INNER */
			
		}); /* end osapi.appdata.get OUTER */
    }
	// ==============================================================	
		
	function displayProfileList() {		
		
		// set up the batch task
		var fields = [
					opensocial.Person.Field.Name, 
					opensocial.Person.Field.Emails,
					'ImageEmail',
					'imageemail',
					'email'
					];
  		var batch = osapi.newBatch();
  		
  		for (i in g_arrOldIDs) {
      		batch.add('person[' + i + ']', osapi.people.get(
				{
					'userId': g_arrOldIDs[i],
					'groupId': '@self',
					'fields': fields
				}));
  		}		
  
  		// execute the batch task
		batch.execute(function(people) {
			var strTable="<table cellspacing='0' cellpadding='0' width='600'><tr>";
			
			// build the table header row
			strTable=strTable + "<td align='left' valign='top' class='tool_table_cell'>" + "<u><b>Last&nbsp;Name</b></u></td>";
			strTable=strTable + "<td align='left' valign='top' class='tool_table_cell'>" + "<u><b>First&nbsp;Name</b></u></td>";
			strTable=strTable + "<td align='left' valign='top' class='tool_table_cell'>" + "<u><b>Email&nbsp;Address</b></u></td>";
			strTable=strTable + "<td align='left' valign='top' class='tool_table_cell'>" + "<u><b>Department</b></u></td>";
			//strTable=strTable + "<td align='left' valign='top' class='tool_table_cell'>" + "<u><b>Faculty&nbsp;Rank</b></u></td>";
			strTable=strTable + "</tr>";
		
			var table_row;
			
			// initialize the export divs
			document.getElementById("canvas_email_list_textarea").value = "";
			document.getElementById("canvas_full_list_textarea").value = "";
			
			var j = 0;
				
			for (i in people) {
			
				/* START WORKING DATA FORMAT
				{"emails":[{"value":"eric.meeks@ucsf.edu"}],
				"profileUrl":"http://dev-profiles.ucsf.edu/ucsf_100810/ProfileDetails.aspx?Person=5138614"
				"id":"5138614","thumbnailUrl":"","name":{"formatted":"Eric R. MeeksEricMeeks",
				"familyName":"Meeks","givenName":"Eric"},
				"organizations":[{"field":"Clinical & Translational Science Institute",
				"title":"Technical Lead, CTSI","name":"UCSF School of Medicine"}],
				"displayName":"Eric R. Meeks"}
				END WORKING DATA FORMAT */
			
				table_row="<tr>";
				table_row += "<td align='left' valign='top' class='tool_table_cell'>" + people[i].name.familyName + "</td>";
				table_row += "<td align='left' valign='top' class='tool_table_cell'>" + people[i].name.givenName + "</td>";
				table_row += "<td align='left' valign='top' class='tool_table_cell'>" + people[i].emails[0].value + "</td>";
				table_row += "<td align='left' valign='top' class='tool_table_cell'>" + people[i].organizations[0].field + "</td>";
				//table_row += "<td align='left' valign='top' class='tool_table_cell'>" + "" + "</td>";
				table_row += "</tr>";
				
				strTable=strTable + table_row;
				
				// add to the email export text area
				if (people[i].emails[0].value) {
					document.getElementById("canvas_email_list_textarea").value += people[i].emails[0].value + ";";
				}
				
				// add to the full export text area
				document.getElementById("canvas_full_list_textarea").value += people[i].name.familyName + ";";
				document.getElementById("canvas_full_list_textarea").value += people[i].name.givenName + ";";
				document.getElementById("canvas_full_list_textarea").value += people[i].emails[0].value + ";";
				document.getElementById("canvas_full_list_textarea").value += people[i].organizations[0].field + "\r\n";
					
				j++;
				
				// update the UI
				//document.getElementById("progress").innerHTML = "Getting details for person " + i + " of " + people.length;
			}
			
			document.getElementById("progress").style.display="none";
				
			strTable=strTable + "</table>";
			
			// dispay the table in canvas view
			document.getElementById("canvas_profile_list").innerHTML = strTable;
			document.getElementById("number_selected").innerHTML = "Selected Profiles (" + j + ")";
		});
		
	} /* end viewProfileList */
	
	// ==============================================================		
		
	function copyEmailDivToClipboard() {
		
		document.getElementById("canvas_email_list").style.display = "block";
		document.getElementById("canvas_email_list_text").style.display = "block";
		document.getElementById("canvas_full_list").style.display = "none";
		document.getElementById("canvas_full_list_text").style.display = "none";
		document.getElementById("canvas_profile_list").style.display = "none";	
	}
	// ==============================================================		
		
	function copyFullDivToClipboard() {
		
		document.getElementById("canvas_full_list").style.display = "block";
		document.getElementById("canvas_full_list_text").style.display = "block";
		document.getElementById("canvas_email_list").style.display = "none";
		document.getElementById("canvas_email_list_text").style.display = "none";
		document.getElementById("canvas_profile_list").style.display = "none";
	}	
	// ==============================================================			
	
	</script>
	]]>
	</Content>

	<!-- ==================== END COMBINED VIEWS ==================== -->


	<!-- ==================== START SMALL VIEW ==================== -->

	<Content type="html" view="small"><![CDATA[<!--HTML-->
    <!DOCTYPE html>
		
	<table cellspacing="6" cellpadding="5">
		<!--<tr><td colspan="3" class="tool_title"><b>My Tools</b></td></tr>-->
		<tr>
			<td class="tool_body">Profile&nbsp;List&nbsp;Tool</td>
			<td><input id="state_button" type='button' class='tool_toggle_button' value='On' onClick='toggleToolState(this)'></td>
			<td><img src="http://www.fakedoom.com/ctsi/hovertiptarget.png" border="0" onClick="showHelp()"></td>
		</tr>
	</table>

	<table id="actions" style="display:none;" cellspacing="2" cellpadding="0">
		<tr>
			<td class="tool_table_cell_small">&nbsp;>>&nbsp;</td>
			<td><span class="tool_table_cell_small" id="add_profiles">
			0 new Profile(s)</span></td>
		</tr>
		<tr>
			<td class="tool_table_cell_small">&nbsp;>>&nbsp;</td>
			<td><span class="tool_table_cell_small" id="list_profiles">
			View list (0 Profiles)</span></td>
		</tr>
	</table>
	
	<script type="text/javascript">
		gadgets.util.registerOnLoadHandler(showToolState);
	</script>
	
	]]>
	</Content>

	<!-- ==================== END SMALL VIEW ==================== -->


	<!-- ==================== START CANVAS VIEW ==================== -->

	<Content type="html" view="canvas"><![CDATA[<!--HTML-->
    <!DOCTYPE html>
    
    <!-- top menu links -->
	<div>
		<p id="number_selected" class="tool_title_orange" style="margin-left:20px;">
		Selected Profiles<p>
		<p class="tool_body" style="margin-left:20px; margin-bottom:10px;">
			<a href="javascript:copyEmailDivToClipboard();">Export email addresses only</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp; 
			<a href="javascript:copyFullDivToClipboard();">Export all data</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;
			<a href="javascript:deleteList();">Delete list</a>&nbsp;&nbsp;&nbsp;
		</p>
		
		<p id="progress" style="margin-left:20px;">
		<br><br>
		<b>Downloading data. This may take a minute or two, based on the size of your selected Profiles list.</b></p>
	</div>
	
	<div id="canvas_email_list" style="display:none; background:#FFF; width:664px; height:26px; margin-left:12px;">
	Copy and paste the email addresses below into an Excel spreadsheet or email client "To" field.
	<!--Place your cursor anywhere in the list, right-click Select All, then Copy.-->
	<span style="float:right; padding: 0px 5px 5px 0px;">
	<input type="button" style="height:22px; font-size:10;" value="Close" onClick="document.getElementById('canvas_email_list').style.display='none';document.getElementById('canvas_email_list_text').style.display='none';document.getElementById('canvas_profile_list').style.display='block';"></button></span>
	</div>
	
	<!-- holds the email address list to be copied to the clipboard -->
	<div id="canvas_email_list_text" style="display:none; width:658px; height:450px; color:#000; margin:0px 5px 0px 5px;">
	<textarea id="canvas_email_list_textarea" rows="27" cols="78" style="border:1px solid #000; margin: 0px 8px 0px 8px;">
	</textarea>
	</div>
	
	<div id="canvas_full_list" style="display:none; background:#FFF; width:664px; height:26px; margin-left: 12px;">
	Copy and paste the profile data below into an Excel spreadsheet or external text editor.
	<!--Place your cursor anywhere in the list, right-click Select All, then Copy.-->
	<span style="float:right; padding: 0px 5px 5px 0px;">
	<input type="button" style="height:22px; font-size:10;" value="Close" onClick="document.getElementById('canvas_full_list').style.display='none';document.getElementById('canvas_full_list_text').style.display='none';document.getElementById('canvas_profile_list').style.display='block';"></button></span>
	</div>
	
	<!-- holds the full profile list to be copied to the clipboard -->
	<div id="canvas_full_list_text" style="display:none; width:658px; height:450px; color:#000; margin:0px 5px 0px 5px;">
	<textarea id="canvas_full_list_textarea" rows="27" cols="78" style="border:1px solid #000; margin: 0px 8px 0px 8px;">
	</textarea>
	</div>	
	
	<!-- holds the visible profile details list -->
	<div id="canvas_profile_list" style="display:none; margin-left:20px; height:520px; overflow:auto;"></div>
	
	<script type="text/javascript">
		function init() {
			// update UI
			gadgets.window.adjustHeight(600);
			readData(displayProfileList);		
			document.getElementById("canvas_profile_list").style.display="block";		
		}
		
		gadgets.util.registerOnLoadHandler(init);
	</script>
	
	]]>
	</Content>

	<!-- ==================== END CANVAS VIEW ==================== -->

</Module>